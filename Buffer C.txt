// GLSL STARTER CODE BY DANIEL S. BUCKSTEIN
//  -> IMAGE TAB (final)

//Rendering Functions For Gaussian Blur

//Blur Function
color4 calcColor(in vec2 uv, in vec2 fragCoord)
{
    //float size = 
    float offset[3] = float[](0.0, 1.0, 2.0);
	float weight[3] = float[](0.32258064516, 0.24193548387, 0.09677419354);
 

    vec4 color = texture(iChannel0, fragCoord / 1024.0) * weight[0];
    for (int i=1; i<3; i++) 
    {
        color += texture(iChannel0, (fragCoord + vec2(offset[i], offset[i])) / 1024.0) * weight[i];
        color += texture(iChannel0, (fragCoord - vec2(offset[i], offset[i])) / 1024.0) * weight[i];
    }
    return color;
}

//------------------------------------------------------------
// SHADERTOY MAIN

// mainImage: process the current pixel (exactly one call per pixel)
//    fragColor: output final color for current pixel
//    fragCoord: input location of current pixel in image (in pixels)
void mainImage(out color4 fragColor, in sCoord fragCoord)
{
    // setup
    // test UV for input image
    sCoord uv = fragCoord / iChannelResolution[0].xy;
    
    // TESTING
    // set iChannel0 to 'Misc/Buffer A' and fetch sample
    fragColor = calcColor(uv, fragCoord);
}
